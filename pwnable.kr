 fd
```c
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
char buf[32];
int main(int argc, char* argv[], char* envp[]){
if(argc<2){
printf("pass argv[1] a number\n");
return 0;
}
int fd = atoi( argv[1] ) - 0x1234;
int len = 0;
len = read(fd, buf, 32);
if(!strcmp("LETMEWIN\n", buf)){
printf("good job :)\n");
system("/bin/cat flag");
exit(0);
}
printf("learn about Linux file IO\n");
return 0;
}

To be honest ,this code is so hard for me ,especially I only know a litte thing of c.
the main function has its parameters(参数)，such as int main(int argc, char* argv[])

       the number of parameters,at least one

      in fact ,argv[1] is data
  e.g.    if threr is a file named 1.sh   declare int main(int argc , char* argv[] ) when call it,use following command line： root@kali-linux:~# ./1.sh hahaha xixixi hehehe，we can know  argc=4，argv[0] is'1.sh' ，argv[1] is'hahaha'，argv[2] is 'xixixi'，argv[3] is 'hehehe'
if(argc<2)
                printf("pass argv[1] a number\n");
                return 0;
                //we need parameters at least two when we run fd
   int fd = atoi( argv[1] ) - 0x1234;
    int len = 0;
    len = read(fd, buf, 32);
    if(!strcmp("LETMEWIN\n", buf)){
        printf("good job :)\n");
        system("/bin/cat flag");
        exit(0);
      //atoi : use it we can realise transform char into int  ,one more to pay attention,fd (file dsecriptor),if it equals to zero(0),we can stdio.
      fd@prowl:~$ ./fd 4660             
LETMEWIN 
